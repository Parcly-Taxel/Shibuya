#!/usr/bin/env python3
from mpmath import *
mp.dps = 100
from shibuya.generators import cu, star_radius
from shibuya.rigidity import jacobian, hessian

def f(*angles):
    a4, a3, a2, a1, a7, a8, a9, a10 = angles
    R = star_radius(11)
    v5 = R*root(1, 11, 5)
    v6 = R*root(1, 11, 6)
    v4 = v5 + expj(a4)
    v3 = v4 + expj(a3)
    v2 = v3 + expj(a2)
    v1 = v2 + expj(a1)
    v7 = v6 + expj(a7)
    v8 = v7 + expj(a8)
    v9 = v8 + expj(a9)
    v10 = v9 + expj(a10)
    v0 = cu(v1, v10)
    ring = [v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10]
    rim = []
    for k in range(5):
        B = -4*k
        s0 = cu(ring[(B-1)%11], ring[(B+1)%11])
        s1 = cu(s0, ring[(B+2)%11])
        s2 = cu(s1, ring[(B+3)%11])
        rim.append([s0, s1, s2])
    return tuple(abs(rim[i][2] - rim[i+1][j]) - sqrt(3) for i in range(4) for j in (0, 1))

regangles = matrix([pi/2 - 2*pi/11, pi/2 - 4*pi/11, pi/2 - 6*pi/11, pi/2 - 8*pi/11,
             -pi/2 + 2*pi/11, -pi/2 + 4*pi/11, -pi/2 + 6*pi/11, -pi/2 + 8*pi/11])
J = jacobian(f, regangles)
_, Sigma, V = svd(J)
nprint(chop(Sigma))
nv1 = V[6,:].T
nv2 = V[7,:].T
def g(z1, z2):
    return f(*(regangles + z1*nv1 + z2*nv2))
for i in range(0, 8, 2):
    H = hessian(lambda x, y: g(x, y)[i], (0, 0))
    m1, m2 = polyroots([H[1,1], 2*H[1,0], H[0,0]])
    print(f"i = {i}: m1 = {m1}, m2 = {m2}")
    # cplot(lambda z: 100*g(re(z), im(z))[i], [-0.1, 0.1], [-0.1, 0.1], points=100000, verbose=True)
# [  5.2154]
# [ 1.62738]
# [ 1.47261]
# [  1.1586]
# [0.753665]
# [0.478201]
# [     0.0]
# [     0.0]
# i = 0: m1 = -0.09256856499749733413826416139995582903015263116138626061923678855028196172536735012398438521019622323, m2 = 2.382711686836380564541393450077764863072060481413520125267636768273634519306364401356330536831897686
# i = 2: m1 = -14.08149379137854777706499337295235054411500515714136535734924660447500383403929518667967140746637682, m2 = 0.5504186772554068816117838321373286054072884609582357163168308066252140444378063918684181239265470105
# i = 4: m1 = -0.9148863345730262420602140227579142946141106440114711383665888926779993070293749487606169088817010439, m2 = 1.255362238231157816408523417435581881571472574443561792680707599132881352267336725310393493498598303
# i = 6: m1 = 0.08761678422949709991408307087952699273995768045216175133376213224224714424245497628543275231434422307, m2 = 3.267435253504964693238828069739749766521541387921079010484166736097552749325204721056851374096144978
